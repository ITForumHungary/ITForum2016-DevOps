{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vstsAccountURL": {
            "type": "string",
            "metadata": {
                "description": "Team Services Account URL (e.g. https://myaccount.visualstudio.com)"
            }
        },
        "vstsPAT": {
            "type": "string",
            "metadata": {
                "description": "Team Services PAT for user with build permissions"
            }
        },
        "vstsPoolName": {
            "type": "string",
            "defaultValue": "default",
            "metadata": {
                "description": "Team Services Agent Pool Name"
            }
        },
        "vstsAgentName": {
            "type": "string",
            "defaultValue": "ubuntu-build-full",
            "metadata": {
                "description": "Team Services Agent Name"
            }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "Linux VM User Account Name"
            }
        },
        "sshRSAPublicKey": {
            "type": "string",
            "metadata": {
                "description": "SSH public key used for auth to all Linux machines."
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "DNS label for the storage account."
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "DNS label and name for the VM"
            }
        }
    },
    "variables": {
        "imagePublisher": "canonical",
        "imageOffer": "ubuntuserver",
        "imageSKU": "16.04.0-LTS",
        "nicName": "[concat(parameters('vmName'),'-nic')]",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "buildagents",
        "subnetPrefix": "10.0.0.0/24",
        "publicIPAddressName": "[concat(parameters('vmName'),'-ip')]",
        "publicIPAddressType": "Dynamic",
        "vmStorageAccountContainerName": "vhds",
        "vmName": "[parameters('vmName')]",
        "vmSize": "Standard_F1",
        "virtualNetworkName": "[concat(parameters('vmName'),'-vnet')]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "storageAccountType": "Standard_LRS",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "sshKeyPath": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
        "customDataParameters": "[concat('\"',parameters('adminUserName'),'\" \"', parameters('vstsAccountURL'),'\" \"', parameters('vstsPAT'),'\" \"', parameters('vstsPoolName'),'\" \"', parameters('vstsAgentName'),'\"')]",
        "customData": "[base64(concat('#cloud-config\r\n\r\nwrite_files:\r\n -  content: |\r\n        [Service]\r\n        ExecStart=\r\n        ExecStart=/usr/bin/dockerd -H unix:///var/run/docker.sock -H 0.0.0.0:2375\r\n    path: /etc/systemd/system/docker.service.d/docker.conf\r\n    permissions: \u00270444\u0027\r\n -  content: | \r\n        #!/bin/sh\r\n        AZUREUSER=${1}\r\n        VSTSURI=${2}\r\n        VSTSTOKEN=${3}\r\n        VSTSPOOL=${4}\r\n        VSTSAGENT=${5}\r\n        sudo apt-get update\r\n        sudo apt-get -y install build-essential\r\n        sudo apt-get -y install packaging-dev\r\n        curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -\r\n        sudo apt-get install -y nodejs\r\n        sudo sh -c \u0027echo \"deb [arch=amd64] https://apt-mo.trafficmanager.net/repos/dotnet-release/ xenial main\" > /etc/apt/sources.list.d/dotnetdev.list\u0027\r\n        sudo apt-key adv --keyserver apt-mo.trafficmanager.net --recv-keys 417A0893\r\n        sudo apt-get update\r\n        sudo apt-get -y install dotnet-dev-1.0.0-preview2-003131 --allow-unauthenticated\r\n        sudo apt-get -y install libunwind8 libcurl3\r\n        sudo apt-add-repository -y ppa:git-core/ppa\r\n        sudo apt-get update\r\n        sudo apt-get -y install git\r\n        sudo apt-get -y install libcurl4-openssl-dev\r\n        installDocker()\r\n        {\r\n            for i in {1..10}; do\r\n                wget --tries 4 --retry-connrefused --waitretry=15 -qO- https://get.docker.com | sh\r\n                if [ $? -eq 0 ]\r\n                then\r\n                    echo \"Docker installed successfully\"\r\n                    break\r\n                fi\r\n                sleep 10\r\n            done\r\n        }\r\n        time installDocker\r\n        sudo usermod -aG docker $AZUREUSER\r\n\r\n        sudo systemctl daemon-reload\r\n        sudo service docker restart\r\n\r\n        ensureDocker()\r\n        {\r\n            # ensure that docker is healthy\r\n            dockerHealthy=1\r\n            for i in {1..3}; do\r\n                sudo docker info\r\n                if [ $? -eq 0 ]\r\n                then\r\n                    dockerHealthy=0\r\n                    echo \"Docker is healthy\"\r\n                    sudo docker ps -a\r\n                    break\r\n                fi\r\n                sleep 10\r\n            done\r\n            if [ $dockerHealthy -ne 0 ]\r\n            then\r\n                echo \"Docker is not healthy\"\r\n            fi\r\n        }\r\n        ensureDocker\r\n        mkdir /home/$AZUREUSER/downloads\r\n        cd /home/$AZUREUSER/downloads\r\n        wget --tries 4 --retry-connrefused --waitretry=15 -q https://github.com/Microsoft/vsts-agent/releases/download/v2.107.0/vsts-agent-ubuntu.16.04-x64-2.107.0.tar.gz\r\n        wget http://security.ubuntu.com/ubuntu/pool/main/i/icu/libicu52_52.1-8ubuntu0.2_amd64.deb\r\n        sudo dpkg -i libicu52_52.1-8ubuntu0.2_amd64.deb\r\n        mkdir /home/$AZUREUSER/vsts-agent -p\r\n        cd /home/$AZUREUSER/vsts-agent\r\n        tar zxvf /home/$AZUREUSER/downloads/vsts-agent-ubuntu.16.04-x64-2.107.0.tar.gz\r\n        sudo -u $AZUREUSER /bin/bash -c \"cd /home/$AZUREUSER/vsts-agent; ./config.sh --unattended --nostart --replace --acceptteeeula --url $VSTSURI --auth PAT --token $VSTSTOKEN --pool $VSTSPOOL --agent $VSTSAGENT\"\r\n        sudo ./svc.sh install\r\n        sudo ./svc.sh start\r\n        sudo apt-get install zip\r\n    path: /opt/azure/configure-server.sh\r\n    permissions: \u00270744\u0027\r\n -  content: |\r\n         #!/bin/bash\r\n         /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/configure-server.sh ',variables('customDataParameters'),' > /var/log/azure/bootstrap-server.log 2>&1 &\" &\r\n    path: /opt/azure/bootstrap-server.sh\r\n    permissions: \u00270744\u0027\r\nruncmd:\r\n -  [ /bin/bash, /opt/azure/bootstrap-server.sh ]\r\n\r\n'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('StorageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('vmName')]"
                }
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "",
                    "customData": "[variables('customData')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('sshRSAPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk1",
                        "vhd": {
                            "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',parameters('vmName'),'-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            }
        }
    ]
}